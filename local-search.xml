<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>C++的引用类型小讨论</title>
    <link href="/2021/03/07/C++%E7%9A%84%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%E5%B0%8F%E8%AE%A8%E8%AE%BA/"/>
    <url>/2021/03/07/C++%E7%9A%84%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B%E5%B0%8F%E8%AE%A8%E8%AE%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="C-的引用类型小讨论"><a href="#C-的引用类型小讨论" class="headerlink" title="C++的引用类型小讨论"></a>C++的引用类型小讨论</h1><h2 id="一、C-引用的意义？"><a href="#一、C-引用的意义？" class="headerlink" title="一、C++引用的意义？"></a>一、C++引用的意义？</h2><ol><li><p>在函数中对一个参数进行修改：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">incr</span><span class="hljs-params">(<span class="hljs-keyword">int</span>&amp; rr)</span> </span>&#123; rr++; &#125;<br><span class="hljs-comment">//This function increases the &quot;parameter&quot; given by 1.</span><br><span class="hljs-comment">//Treat &#x27;&amp;&#x27; as &quot;get rr&#x27;s pointer&quot;.</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">g</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">double</span> ss = <span class="hljs-number">1</span>;<br>    incr(ss);                    <br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>加速。（针对常量引用）</p><p>我们不妨考虑一下大的对象的存在和一般函数的“形参”思维。由于有“形参”的存在，函数在传入参数时相当于复制了一个temp，接着处理temp，最后把result回传（保证实参在函数过程中不被改变）。那么当对象较大时，这一temp的初始化过程会占用一定的时间，降低效率。此时采用例如 “const int&amp; number” 的形式，就可以立刻传入一个对象并且该对象不能被改变，等同于传了参数进来。</p><blockquote><p>当然，int类型的参数这么传并不能节约多少时间，此处只是扔一个小栗子。</p></blockquote></li></ol><h2 id="二、for与引用"><a href="#二、for与引用" class="headerlink" title="二、for与引用"></a>二、for与引用</h2><p>先看这个函数：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-function"><span class="hljs-built_in">string</span> <span class="hljs-title">s</span><span class="hljs-params">(<span class="hljs-string">&quot;Hello World!&quot;</span>)</span></span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">auto</span> &amp;c:s)<br>c = <span class="hljs-built_in">toupper</span>(c);<span class="hljs-comment">//转换大写形式</span><br><span class="hljs-built_in">cout</span> &lt;&lt; s &lt;&lt; <span class="hljs-built_in">endl</span>;<br></code></pre></td></tr></table></figure><p>可能有人会问：<em>遍历字符串s的时候，每个字符都要以引用形式绑定到c,但引用不是只可以绑定一次么？</em></p><p>我们可以将它理解成：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> iter = s.begin();iter != s.end();++iter)<br>&#123;<br>    <span class="hljs-keyword">auto</span> &amp; c = *iter; <br>&#125;<br></code></pre></td></tr></table></figure><p>引用可以且仅可以绑定一次，</p><p>但在这种for相关的特殊引用中，每次循环，c引用都会被消解，生命周期结束。</p>]]></content>
    
    
    
    <tags>
      
      <tag>C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>树莓派入门（2）烧录完系统该做的</title>
    <link href="/2021/03/01/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%85%A5%E9%97%A8%EF%BC%882%EF%BC%89%E7%83%A7%E5%BD%95%E5%AE%8C%E7%B3%BB%E7%BB%9F%E8%AF%A5%E5%81%9A%E7%9A%84/"/>
    <url>/2021/03/01/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%85%A5%E9%97%A8%EF%BC%882%EF%BC%89%E7%83%A7%E5%BD%95%E5%AE%8C%E7%B3%BB%E7%BB%9F%E8%AF%A5%E5%81%9A%E7%9A%84/</url>
    
    <content type="html"><![CDATA[<h1 id="树莓派入门（2）烧录完系统该做的"><a href="#树莓派入门（2）烧录完系统该做的" class="headerlink" title="树莓派入门（2）烧录完系统该做的"></a>树莓派入门（2）烧录完系统该做的</h1><h2 id="一、换源"><a href="#一、换源" class="headerlink" title="一、换源"></a>一、换源</h2><p>树莓派默认镜像源是国外的，由于众所周知的原因，国内访问速度非常慢，会带来许多不便，因此需要换成国内源。这里使用中科大软件源。</p><ol><li><p>登陆到树莓派。用VNC或PUTTY登录都可，进到命令行界面。</p></li><li><p>备份源文件。执行如下命令：</p><span id="more"></span><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo cp <span class="hljs-regexp">/etc/</span>apt<span class="hljs-regexp">/sources.list /</span>etc<span class="hljs-regexp">/apt/</span>sources.list.bak<br><br>sudo cp <span class="hljs-regexp">/etc/</span>apt<span class="hljs-regexp">/sources.list.d/</span>raspi.list <span class="hljs-regexp">/etc/</span>apt<span class="hljs-regexp">/sources.list.d/</span>raspi.list.bak<br></code></pre></td></tr></table></figure></li><li><p>修改软件更新源</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo nano <span class="hljs-regexp">/etc/</span>apt/sources.list<br></code></pre></td></tr></table></figure></li><li><p>将第一行修改成中科大软件源地址，「Ctrl+O」进行保存，然后回车，「Ctrl+X」退出。（后面的都加#注释掉）</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">deb http:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/raspbian/</span>raspbian/ stretch main contrib non-free rpi<br></code></pre></td></tr></table></figure></li></ol><ol start="5"><li><p>修改系统更新源，执行如下命令：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo nano <span class="hljs-regexp">/etc/</span>apt<span class="hljs-regexp">/sources.list.d/</span>raspi.list<br></code></pre></td></tr></table></figure></li><li><p>类似的，进去后将第一行修改成中科大的系统源地址，「Ctrl+O」进行保存，然后回车，「Ctrl+X」退出。（后面的都加#注释掉）</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">deb http:<span class="hljs-regexp">//mi</span>rrors.ustc.edu.cn<span class="hljs-regexp">/archive.raspberrypi.org/</span>debian/ stretch main ui<br></code></pre></td></tr></table></figure></li><li><p>同步更新源，执行如下命令：sudo apt-get update</p></li><li><p>更新升级以安装软件包：sudo apt-get upgrade（上下两者要按顺序来）</p></li></ol><h2 id="二、安装中文输入法"><a href="#二、安装中文输入法" class="headerlink" title="二、安装中文输入法"></a>二、安装中文输入法</h2><p>这个很简单，这里安装的是基于Fcitx框架的谷歌拼音输入法。同样在命令行窗口：</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">sudo apt-<span class="hljs-built_in">get</span> install fcitx fcitx-googlepinyin fcitx-<span class="hljs-keyword">module</span>-cloudpinyin fcitx-sunpinyin<br></code></pre></td></tr></table></figure><h2 id="三、升级Python环境"><a href="#三、升级Python环境" class="headerlink" title="三、升级Python环境"></a>三、升级Python环境</h2><p>树莓派默认的Python环境是2.x的，不恰当的卸载2.x环境会造成桌面GUI系统的失效。</p><p>不过似乎自带python3.7？</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c">sudo apt-get autoremove python2<span class="hljs-number">.7</span> <span class="hljs-comment">//删除python2.7</span><br>sudo rm /usr/bin/python<br>sudo ln -s /usr/bin/python3<span class="hljs-number">.7</span> /usr/bin/python<br><span class="hljs-comment">//把原来python链接删除，新建新的链接，这样就默认使用python3.7</span><br></code></pre></td></tr></table></figure><p>输入python，检查你的python当前环境。</p><h2 id="配置FTP服务器"><a href="#配置FTP服务器" class="headerlink" title="配置FTP服务器"></a>配置FTP服务器</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs c">sudo apt-get install vsftpd <span class="hljs-comment">// 等待装好后输入下一行代码</span><br>sudo service vsftpd start <span class="hljs-comment">// 开启ftp服务</span><br>sudo vi /etc/vsftpd.conf<br></code></pre></td></tr></table></figure><p>在文件中进行如下修改：（照抄别人的）</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">anonymous_enable</span>=<span class="hljs-literal">YES</span><br><span class="hljs-attr">anon_upload_enable</span>=<span class="hljs-literal">YES</span><br><span class="hljs-attr">anon_world_readable_only</span>=<span class="hljs-literal">NO</span><br><span class="hljs-attr">anon_mkdir_write_enable</span>=<span class="hljs-literal">YES</span><br><span class="hljs-attr">anon_other_write_enable</span>=<span class="hljs-literal">YES</span><br><span class="hljs-attr">anon_root</span>=/srv/ftp<br><br><br><span class="hljs-attr">chown_uploads</span>=<span class="hljs-literal">YES</span><br><span class="hljs-attr">chown_username</span>=Ethan<br><span class="hljs-attr">delete_failed_uploads</span>=<span class="hljs-literal">YES</span><br><br><br><span class="hljs-attr">listen</span>=<span class="hljs-literal">YES</span><br><span class="hljs-attr">listen_port</span>=<span class="hljs-number">21</span><br><span class="hljs-attr">connect_from_port_20</span>=<span class="hljs-literal">YES</span><br><br><br><span class="hljs-attr">local_enable</span>=<span class="hljs-literal">YES</span><br><span class="hljs-attr">local_root</span>=/srv/ftp/<br><span class="hljs-attr">local_umask</span>=<span class="hljs-number">022</span><br><br><br><span class="hljs-attr">write_enable</span>=<span class="hljs-literal">YES</span><br></code></pre></td></tr></table></figure><p>之后安装FileZilla之类的软件就可以来回传文件了。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>树莓派入门（1）无显示器烧录系统并连接电脑</title>
    <link href="/2021/03/01/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%85%A5%E9%97%A8%EF%BC%881%EF%BC%89%E6%97%A0%E6%98%BE%E7%A4%BA%E5%99%A8%E7%83%A7%E5%BD%95%E7%B3%BB%E7%BB%9F%E5%B9%B6%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/"/>
    <url>/2021/03/01/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%85%A5%E9%97%A8%EF%BC%881%EF%BC%89%E6%97%A0%E6%98%BE%E7%A4%BA%E5%99%A8%E7%83%A7%E5%BD%95%E7%B3%BB%E7%BB%9F%E5%B9%B6%E8%BF%9E%E6%8E%A5%E7%94%B5%E8%84%91/</url>
    
    <content type="html"><![CDATA[<h1 id="树莓派入门（1）无显示器烧录系统并连接电脑"><a href="#树莓派入门（1）无显示器烧录系统并连接电脑" class="headerlink" title="树莓派入门（1）无显示器烧录系统并连接电脑"></a>树莓派入门（1）无显示器烧录系统并连接电脑</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol><li><p>下载安装工具与镜像文件</p><p>官方网站：<a href="https://www.raspberrypi.org/downloads/">https://www.raspberrypi.org/downloads/</a></p><span id="more"></span><p>下载可以分为两个方面：Imager以及镜像文件。</p><blockquote><p><strong>为什么要分为两个？不是可以直接Choose OS吗？</strong></p><p>在实践中，我发现Imager的烧录时间非常长，而且时常卡死。检查后发现主要的问题是镜像文件的下载（国内下载较慢，而且Raspberry Pi Imager不能显示下载程度）。</p></blockquote><p>关于系统的选择：对于无显示器用户（比如我），我更推荐原生系统。虽然主流的Linux操作系统是Ubuntu，但是Ubuntu在安装完毕后并不能直接生成用户Ubuntu，无显示屏的话操作非常繁杂。</p><p>原生系统分为三个：</p><pre><code>* 推荐版本【1G多】：带桌面，带了一部分软件* 带不少软件的版本【2G多】：带桌面，软件更多（个人觉得不需要）* Lite版本【0.7G左右】：不带桌面，纯命令行执行，不推荐小白使用</code></pre></li><li><p>下载连接工具</p><p>PUTTY、VNC-Viewer</p></li></ol><h2 id="烧录镜像文件"><a href="#烧录镜像文件" class="headerlink" title="烧录镜像文件"></a>烧录镜像文件</h2><ol><li><p>格式化内存卡 </p><p><strong>Linux系统的格式化与Windows系统不太一样，最好不要直接Windows格式化。</strong>Raspberry Pi Imager自己就集成了该功能。</p><p>在”Choose OS“一栏，选择”Erase“（长得像个垃圾桶），然后”Choose SD Card“选择自己插进去的SD卡。WRITE即可。</p></li><li><p>文件烧录</p><p>”Choose OS“一栏中，选择”Use Custom“， 然后浏览文件夹选中下载并解压好的镜像文件（.img），”Choose SD Card“，WRITE！</p><p>然后就可以去倒杯水等烧录好了。</p></li><li><p>烧录完成后，点击 CONTINUE 。</p></li><li><p>拔掉读卡器。</p></li></ol><h2 id="连接电脑"><a href="#连接电脑" class="headerlink" title="连接电脑"></a>连接电脑</h2><ol><li><p>新建ssh文件和conf文件 </p><blockquote><p>刚刚烧好的SD卡插入树莓派是无法正常上网的，这时我们就需要配置 SSH 文件。</p></blockquote><p>将转载了SD卡的读卡器重新插入电脑上，这时可以看见多了一个 boot磁盘，打开它。</p><p>首先勾选文件扩展名，使后面的扩展名可以被更改。然后新建一个文本文档，输入 ssh （将后缀名 .txt 删掉）。同样的，创建wpa_supplicant.conf。</p><p>ssh空着不要动（建这个文件似乎是为了防止树莓派通过不自动生成ssh文件来防止ssh连接），用记事本打开.conf，输入以下代码：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-attribute">country</span>=CN<br><span class="hljs-attribute">ctrl_interface</span>=DIR=/var/run/wpa_supplicant <span class="hljs-attribute">GROUP</span>=netdev<br><span class="hljs-attribute">update_config</span>=1<br><br>network=&#123;<br>    <span class="hljs-attribute">ssid</span>=<span class="hljs-string">&quot;WIFI_NAME&quot;</span> <br>    <span class="hljs-attribute">psk</span>=<span class="hljs-string">&quot;PASSWD&quot;</span> <br>    <span class="hljs-attribute">priority</span>=1 <br>&#125;<br></code></pre></td></tr></table></figure><p>其中”WIFI_NAME” “PASSWD”怎么改就不要我教了吧。</p></li><li><p>寻找树莓派的IP地址<strong>【前后顺序不要颠倒】</strong></p><ul><li><p>拔掉 SD 卡（安全弹出）。</p></li><li><p>SD卡插进树莓派，并充上电。</p></li><li><p>然后发呆等待 10 分钟（树莓派首次加载启动大概需要 5-10 分钟）。</p></li><li><p>等待的过程中，你会发现你的WIFI有一个设备在连接（树莓派）。记录下它的IP。【是动态的，公网上是不能访问的，只能在局域网下访问】</p><blockquote><p>这里的查看通过你路由器上的查看终端实现。</p></blockquote></li></ul></li><li><p>PUTTY远程连接</p><ul><li>打开 putty-64bit-0.74-installer.msi ，进入安装界面。</li><li>next，install，finish【中间可以考虑改一下安装目录，防止变成C盘战士】</li></ul></li><li><p>安装完成后，先将电脑连上树莓派连接的WIFI（使其处于同一子网下），然后打开 putty ，输入树莓派的IP地址，再点击 Open 。WARNING信息点击 否(N)。</p></li><li><p>输入用户名和密码</p><p>默认用户：pi 默认密码：raspberry</p></li><li><p>至此，putty设置OK。</p></li></ol><h2 id="开启VNC服务（针对树莓派4B进行了更新）"><a href="#开启VNC服务（针对树莓派4B进行了更新）" class="headerlink" title="开启VNC服务（针对树莓派4B进行了更新）"></a>开启VNC服务（针对树莓派4B进行了更新）</h2><ol><li><p>首先输入命令：sudo raspi-config，按下回车后，进入配置界面。</p></li><li><p>通过上下键选择 Interface Options ，接着左右键选择 Select ，并按回车键。</p></li><li><p>接着上下键选择 VNC ，左右键选择 Select ，并按回车键。左右键选择Yes-OK。</p></li><li><p>上下键选择 Advanced Options ，左右键选择 Select ，并按回车键。</p></li><li><p>上下键选择 Resolution ，左右键选择 Select ，并按回车键。</p></li><li><p>接着是分辨率选择，上下键选择 DMT Mode 16 ，左右键选择 ok ，并按回车键。<strong>重要：否则会显得字体很小</strong></p></li><li><p>Finish。</p></li></ol><h2 id="VNC远程桌面连接"><a href="#VNC远程桌面连接" class="headerlink" title="VNC远程桌面连接"></a>VNC远程桌面连接</h2><p>与PUTTY类似的，安装VNC-Viewer应用程序。注意VNC-VIewer没有中文。</p><blockquote><p>期间可以选择添加”Desktop Shortcut“来添加桌面快捷方式。</p></blockquote><ul><li>首先打开VNC-Viewer。（可以选择取消勾选来阻止信息的上传）</li><li>在最上面地址栏输入树莓派的IP地址，并按回车键。</li><li>连接完毕后，弹出新窗口，点击 Continue 。</li><li>输入用户名和密码，再点击 OK 。（如果没有额外设置的话，仍然是pi的默认用户名密码。）</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
